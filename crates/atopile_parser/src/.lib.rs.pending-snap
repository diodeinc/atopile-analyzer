{"run_id":"1741845577-248333000","line":449,"new":{"module_name":"atopile_parser","snapshot_name":"stmt_at","metadata":{"source":"crates/atopile_parser/src/lib.rs","assertion_line":449,"expression":"source.stmt_at(0)","snapshot_kind":"text"},"snapshot":"Some(\n    Spanned(\n        Assign(\n            AssignStmt {\n                target: Spanned(\n                    PortRef {\n                        parts: [\n                            Spanned(\n                                \"r1\",\n                                0..4,\n                            ),\n                            Spanned(\n                                \"value\",\n                                16..22,\n                            ),\n                        ],\n                    },\n                    0..22,\n                ),\n                type_info: None,\n                value: Spanned(\n                    Physical(\n                        Spanned(\n                            PhysicalValue {\n                                value: Spanned(\n                                    \"100\",\n                                    31..32,\n                                ),\n                                unit: Some(\n                                    Spanned(\n                                        \"kohm\",\n                                        32..33,\n                                    ),\n                                ),\n                                tolerance: None,\n                            },\n                            31..33,\n                        ),\n                    ),\n                    31..33,\n                ),\n            },\n        ),\n        0..33,\n    ),\n)"},"old":{"module_name":"atopile_parser","metadata":{"snapshot_kind":"text"},"snapshot":"Some(\n    Spanned(\n        Import(\n            ImportStmt {\n                from_path: Spanned(\n                    \"test.ato\",\n                    5..15,\n                ),\n                imports: [\n                    Spanned(\n                        Symbol(\n                            \"MyModule\",\n                        ),\n                        23..31,\n                    ),\n                ],\n            },\n        ),\n        0..31,\n    ),\n)"}}
