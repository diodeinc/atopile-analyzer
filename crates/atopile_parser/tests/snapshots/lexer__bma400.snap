---
source: crates/atopile_parser/tests/lexer.rs
expression: output
---
(
    [
        Spanned(
            From,
            0..4,
        ),
        Spanned(
            String(
                "generics/interfaces.ato",
            ),
            5..30,
        ),
        Spanned(
            Import,
            31..37,
        ),
        Spanned(
            Name(
                "Power",
            ),
            38..43,
        ),
        Spanned(
            Comma,
            43..44,
        ),
        Spanned(
            Name(
                "I2C",
            ),
            45..48,
        ),
        Spanned(
            Comma,
            48..49,
        ),
        Spanned(
            Name(
                "SPI",
            ),
            50..53,
        ),
        Spanned(
            Comma,
            53..54,
        ),
        Spanned(
            Name(
                "GPIO",
            ),
            55..59,
        ),
        Spanned(
            Newline,
            59..60,
        ),
        Spanned(
            From,
            60..64,
        ),
        Spanned(
            String(
                "generics/capacitors.ato",
            ),
            65..90,
        ),
        Spanned(
            Import,
            91..97,
        ),
        Spanned(
            Name(
                "Capacitor",
            ),
            98..107,
        ),
        Spanned(
            Newline,
            107..108,
        ),
        Spanned(
            From,
            108..112,
        ),
        Spanned(
            String(
                "_BMA400/BMA400.ato",
            ),
            113..133,
        ),
        Spanned(
            Import,
            134..140,
        ),
        Spanned(
            Name(
                "BMA400",
            ),
            141..147,
        ),
        Spanned(
            Newline,
            147..148,
        ),
        Spanned(
            Newline,
            148..149,
        ),
        Spanned(
            Module,
            149..155,
        ),
        Spanned(
            Name(
                "Bma400",
            ),
            156..162,
        ),
        Spanned(
            Colon,
            162..163,
        ),
        Spanned(
            Newline,
            163..164,
        ),
        Spanned(
            Indent,
            164..164,
        ),
        Spanned(
            Comment(
                "Ultra-low power triaxial accelerometer driver module based on the BMA400 from Bosch.",
            ),
            171..255,
        ),
        Spanned(
            Newline,
            255..256,
        ),
        Spanned(
            Newline,
            260..261,
        ),
        Spanned(
            Comment(
                "Features:",
            ),
            265..274,
        ),
        Spanned(
            Newline,
            274..275,
        ),
        Spanned(
            Comment(
                "- Ultra-low power consumption (14.5μA in normal mode, 850nA in low-power mode)",
            ),
            279..357,
        ),
        Spanned(
            Newline,
            357..358,
        ),
        Spanned(
            Comment(
                "- 12-bit digital resolution",
            ),
            362..389,
        ),
        Spanned(
            Newline,
            389..390,
        ),
        Spanned(
            Comment(
                "- Programmable measurement ranges: ±2g, ±4g, ±8g, ±16g",
            ),
            394..448,
        ),
        Spanned(
            Newline,
            448..449,
        ),
        Spanned(
            Comment(
                "- Built-in power management with auto wake-up/sleep capability",
            ),
            453..515,
        ),
        Spanned(
            Newline,
            515..516,
        ),
        Spanned(
            Comment(
                "- Integrated FIFO (1KB)",
            ),
            520..543,
        ),
        Spanned(
            Newline,
            543..544,
        ),
        Spanned(
            Comment(
                "- Smart interrupts including:",
            ),
            548..577,
        ),
        Spanned(
            Newline,
            577..578,
        ),
        Spanned(
            Comment(
                "- Activity/inactivity detection",
            ),
            584..615,
        ),
        Spanned(
            Newline,
            615..616,
        ),
        Spanned(
            Comment(
                "- Step counting with low power consumption (4μA)",
            ),
            622..670,
        ),
        Spanned(
            Newline,
            670..671,
        ),
        Spanned(
            Comment(
                "- Orientation detection",
            ),
            677..700,
        ),
        Spanned(
            Newline,
            700..701,
        ),
        Spanned(
            Comment(
                "- Tap/double-tap sensing",
            ),
            707..731,
        ),
        Spanned(
            Newline,
            731..732,
        ),
        Spanned(
            Comment(
                "- Digital interfaces: I2C or SPI",
            ),
            736..768,
        ),
        Spanned(
            Newline,
            768..769,
        ),
        Spanned(
            Comment(
                "- VDDIO voltage range: 1.2V to 3.6V",
            ),
            773..808,
        ),
        Spanned(
            Newline,
            808..809,
        ),
        Spanned(
            Comment(
                "- VDD voltage range: 1.7V to 3.6V",
            ),
            813..846,
        ),
        Spanned(
            Newline,
            846..847,
        ),
        Spanned(
            Newline,
            851..852,
        ),
        Spanned(
            Comment(
                "Example Usage:",
            ),
            856..870,
        ),
        Spanned(
            Newline,
            870..871,
        ),
        Spanned(
            Comment(
                "```",
            ),
            875..878,
        ),
        Spanned(
            Newline,
            878..879,
        ),
        Spanned(
            Comment(
                "from 'generics/interfaces.ato' import Power, I2C, GPIO",
            ),
            883..937,
        ),
        Spanned(
            Newline,
            937..938,
        ),
        Spanned(
            Comment(
                "from 'bma400/bma400.ato' import Bma400, Bma400_I2C",
            ),
            942..992,
        ),
        Spanned(
            Newline,
            992..993,
        ),
        Spanned(
            Newline,
            997..998,
        ),
        Spanned(
            Comment(
                "module UserBoard:",
            ),
            1002..1019,
        ),
        Spanned(
            Newline,
            1019..1020,
        ),
        Spanned(
            Comment(
                "'''User board with BMA400 accelerometer'''",
            ),
            1028..1070,
        ),
        Spanned(
            Newline,
            1070..1071,
        ),
        Spanned(
            Newline,
            1079..1080,
        ),
        Spanned(
            Comment(
                "# Interfaces",
            ),
            1088..1100,
        ),
        Spanned(
            Newline,
            1100..1101,
        ),
        Spanned(
            Comment(
                "power_1v8 = new Power  # 1.8V power supply",
            ),
            1109..1151,
        ),
        Spanned(
            Newline,
            1151..1152,
        ),
        Spanned(
            Comment(
                "i2c = new I2C          # I2C bus",
            ),
            1160..1192,
        ),
        Spanned(
            Newline,
            1192..1193,
        ),
        Spanned(
            Comment(
                "int1 = new GPIO        # Interrupt 1 input",
            ),
            1201..1243,
        ),
        Spanned(
            Newline,
            1243..1244,
        ),
        Spanned(
            Newline,
            1252..1253,
        ),
        Spanned(
            Comment(
                "# Accelerometer",
            ),
            1261..1276,
        ),
        Spanned(
            Newline,
            1276..1277,
        ),
        Spanned(
            Comment(
                "accel = new Bma400",
            ),
            1285..1303,
        ),
        Spanned(
            Newline,
            1303..1304,
        ),
        Spanned(
            Comment(
                "accel.ic -> Bma400_I2C  # Use I2C interface",
            ),
            1312..1355,
        ),
        Spanned(
            Newline,
            1355..1356,
        ),
        Spanned(
            Newline,
            1364..1365,
        ),
        Spanned(
            Comment(
                "# Connections",
            ),
            1373..1386,
        ),
        Spanned(
            Newline,
            1386..1387,
        ),
        Spanned(
            Comment(
                "accel.power ~ power_1v8",
            ),
            1395..1418,
        ),
        Spanned(
            Newline,
            1418..1419,
        ),
        Spanned(
            Comment(
                "accel.i2c ~ i2c",
            ),
            1427..1442,
        ),
        Spanned(
            Newline,
            1442..1443,
        ),
        Spanned(
            Comment(
                "accel.int1 ~ int1",
            ),
            1451..1468,
        ),
        Spanned(
            Newline,
            1468..1469,
        ),
        Spanned(
            Comment(
                "```",
            ),
            1473..1476,
        ),
        Spanned(
            Newline,
            1476..1477,
        ),
        Spanned(
            Newline,
            1484..1485,
        ),
        Spanned(
            Newline,
            1489..1490,
        ),
        Spanned(
            Signal,
            1494..1500,
        ),
        Spanned(
            Name(
                "gnd",
            ),
            1501..1504,
        ),
        Spanned(
            Newline,
            1504..1505,
        ),
        Spanned(
            Newline,
            1509..1510,
        ),
        Spanned(
            Dedent,
            1515..1515,
        ),
    ],
    [],
)
