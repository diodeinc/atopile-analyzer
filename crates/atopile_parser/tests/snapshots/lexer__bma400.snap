---
source: crates/atopile_parser/tests/lexer.rs
expression: output
---
(
    [
        Spanned(
            From,
            0..4,
        ),
        Spanned(
            String(
                "generics/interfaces.ato",
            ),
            5..30,
        ),
        Spanned(
            Import,
            31..37,
        ),
        Spanned(
            Name(
                "Power",
            ),
            38..43,
        ),
        Spanned(
            Comma,
            43..44,
        ),
        Spanned(
            Name(
                "I2C",
            ),
            45..48,
        ),
        Spanned(
            Comma,
            48..49,
        ),
        Spanned(
            Name(
                "SPI",
            ),
            50..53,
        ),
        Spanned(
            Comma,
            53..54,
        ),
        Spanned(
            Name(
                "GPIO",
            ),
            55..59,
        ),
        Spanned(
            Newline,
            59..60,
        ),
        Spanned(
            From,
            60..64,
        ),
        Spanned(
            String(
                "generics/capacitors.ato",
            ),
            65..90,
        ),
        Spanned(
            Import,
            91..97,
        ),
        Spanned(
            Name(
                "Capacitor",
            ),
            98..107,
        ),
        Spanned(
            Newline,
            107..108,
        ),
        Spanned(
            From,
            108..112,
        ),
        Spanned(
            String(
                "_BMA400/BMA400.ato",
            ),
            113..133,
        ),
        Spanned(
            Import,
            134..140,
        ),
        Spanned(
            Name(
                "BMA400",
            ),
            141..147,
        ),
        Spanned(
            Newline,
            147..148,
        ),
        Spanned(
            Newline,
            148..149,
        ),
        Spanned(
            Module,
            149..155,
        ),
        Spanned(
            Name(
                "Bma400",
            ),
            156..162,
        ),
        Spanned(
            Colon,
            162..163,
        ),
        Spanned(
            Newline,
            163..164,
        ),
        Spanned(
            Indent,
            164..164,
        ),
        Spanned(
            Comment(
                "Ultra-low power triaxial accelerometer driver module based on the BMA400 from Bosch.",
            ),
            171..255,
        ),
        Spanned(
            Newline,
            255..256,
        ),
        Spanned(
            Newline,
            260..261,
        ),
        Spanned(
            Comment(
                "Features:",
            ),
            265..274,
        ),
        Spanned(
            Newline,
            274..275,
        ),
        Spanned(
            Comment(
                "- Ultra-low power consumption (14.5μA in normal mode, 850nA in low-power mode)",
            ),
            279..358,
        ),
        Spanned(
            Newline,
            358..359,
        ),
        Spanned(
            Comment(
                "- 12-bit digital resolution",
            ),
            363..390,
        ),
        Spanned(
            Newline,
            390..391,
        ),
        Spanned(
            Comment(
                "- Programmable measurement ranges: ±2g, ±4g, ±8g, ±16g",
            ),
            395..453,
        ),
        Spanned(
            Newline,
            453..454,
        ),
        Spanned(
            Comment(
                "- Built-in power management with auto wake-up/sleep capability",
            ),
            458..520,
        ),
        Spanned(
            Newline,
            520..521,
        ),
        Spanned(
            Comment(
                "- Integrated FIFO (1KB)",
            ),
            525..548,
        ),
        Spanned(
            Newline,
            548..549,
        ),
        Spanned(
            Comment(
                "- Smart interrupts including:",
            ),
            553..582,
        ),
        Spanned(
            Newline,
            582..583,
        ),
        Spanned(
            Comment(
                "- Activity/inactivity detection",
            ),
            589..620,
        ),
        Spanned(
            Newline,
            620..621,
        ),
        Spanned(
            Comment(
                "- Step counting with low power consumption (4μA)",
            ),
            627..676,
        ),
        Spanned(
            Newline,
            676..677,
        ),
        Spanned(
            Comment(
                "- Orientation detection",
            ),
            683..706,
        ),
        Spanned(
            Newline,
            706..707,
        ),
        Spanned(
            Comment(
                "- Tap/double-tap sensing",
            ),
            713..737,
        ),
        Spanned(
            Newline,
            737..738,
        ),
        Spanned(
            Comment(
                "- Digital interfaces: I2C or SPI",
            ),
            742..774,
        ),
        Spanned(
            Newline,
            774..775,
        ),
        Spanned(
            Comment(
                "- VDDIO voltage range: 1.2V to 3.6V",
            ),
            779..814,
        ),
        Spanned(
            Newline,
            814..815,
        ),
        Spanned(
            Comment(
                "- VDD voltage range: 1.7V to 3.6V",
            ),
            819..852,
        ),
        Spanned(
            Newline,
            852..853,
        ),
        Spanned(
            Newline,
            857..858,
        ),
        Spanned(
            Comment(
                "Example Usage:",
            ),
            862..876,
        ),
        Spanned(
            Newline,
            876..877,
        ),
        Spanned(
            Comment(
                "```",
            ),
            881..884,
        ),
        Spanned(
            Newline,
            884..885,
        ),
        Spanned(
            Comment(
                "from 'generics/interfaces.ato' import Power, I2C, GPIO",
            ),
            889..943,
        ),
        Spanned(
            Newline,
            943..944,
        ),
        Spanned(
            Comment(
                "from 'bma400/bma400.ato' import Bma400, Bma400_I2C",
            ),
            948..998,
        ),
        Spanned(
            Newline,
            998..999,
        ),
        Spanned(
            Newline,
            1003..1004,
        ),
        Spanned(
            Comment(
                "module UserBoard:",
            ),
            1008..1025,
        ),
        Spanned(
            Newline,
            1025..1026,
        ),
        Spanned(
            Comment(
                "'''User board with BMA400 accelerometer'''",
            ),
            1034..1076,
        ),
        Spanned(
            Newline,
            1076..1077,
        ),
        Spanned(
            Newline,
            1085..1086,
        ),
        Spanned(
            Comment(
                "# Interfaces",
            ),
            1094..1106,
        ),
        Spanned(
            Newline,
            1106..1107,
        ),
        Spanned(
            Comment(
                "power_1v8 = new Power  # 1.8V power supply",
            ),
            1115..1157,
        ),
        Spanned(
            Newline,
            1157..1158,
        ),
        Spanned(
            Comment(
                "i2c = new I2C          # I2C bus",
            ),
            1166..1198,
        ),
        Spanned(
            Newline,
            1198..1199,
        ),
        Spanned(
            Comment(
                "int1 = new GPIO        # Interrupt 1 input",
            ),
            1207..1249,
        ),
        Spanned(
            Newline,
            1249..1250,
        ),
        Spanned(
            Newline,
            1258..1259,
        ),
        Spanned(
            Comment(
                "# Accelerometer",
            ),
            1267..1282,
        ),
        Spanned(
            Newline,
            1282..1283,
        ),
        Spanned(
            Comment(
                "accel = new Bma400",
            ),
            1291..1309,
        ),
        Spanned(
            Newline,
            1309..1310,
        ),
        Spanned(
            Comment(
                "accel.ic -> Bma400_I2C  # Use I2C interface",
            ),
            1318..1361,
        ),
        Spanned(
            Newline,
            1361..1362,
        ),
        Spanned(
            Newline,
            1370..1371,
        ),
        Spanned(
            Comment(
                "# Connections",
            ),
            1379..1392,
        ),
        Spanned(
            Newline,
            1392..1393,
        ),
        Spanned(
            Comment(
                "accel.power ~ power_1v8",
            ),
            1401..1424,
        ),
        Spanned(
            Newline,
            1424..1425,
        ),
        Spanned(
            Comment(
                "accel.i2c ~ i2c",
            ),
            1433..1448,
        ),
        Spanned(
            Newline,
            1448..1449,
        ),
        Spanned(
            Comment(
                "accel.int1 ~ int1",
            ),
            1457..1474,
        ),
        Spanned(
            Newline,
            1474..1475,
        ),
        Spanned(
            Comment(
                "```",
            ),
            1479..1482,
        ),
        Spanned(
            Newline,
            1482..1483,
        ),
        Spanned(
            Newline,
            1490..1491,
        ),
        Spanned(
            Newline,
            1495..1496,
        ),
        Spanned(
            Signal,
            1500..1506,
        ),
        Spanned(
            Name(
                "gnd",
            ),
            1507..1510,
        ),
        Spanned(
            Newline,
            1510..1511,
        ),
        Spanned(
            Dedent,
            1515..1515,
        ),
    ],
    [],
)
